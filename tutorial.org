#+title: Systemy cząsteczkowe w WebGL - tutorial
#+startup: hidestars

Using Org-Babel to write a tutorial :).



* WebGL
#+name: JSIncludes
#+begin_src html
  <script type="text/javascript" src="js/gl-matrix-min.js"></script>
  <script type="text/javascript" src="js/webgl-utils.js"></script>
#+end_src


* Cząsteczki

#+name: FragmentShader
#+begin_src html
<script id="shader-fs" type="x-shader/x-fragment">
    precision mediump float;
 
    varying vec2 vTextureCoord;
 
    uniform sampler2D uSampler;
 
    uniform vec3 uColor;
 
    void main(void) {
        vec4 textureColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
        gl_FragColor = textureColor * vec4(uColor, 1.0);
    }
</script>
#+end_src
 
#+name: VertexShader
#+begin_src html
<script id="shader-vs" type="x-shader/x-vertex">
    attribute vec3 aVertexPosition;
    attribute vec2 aTextureCoord;
 
    uniform mat4 uMVMatrix;
    uniform mat4 uPMatrix;
 
    varying vec2 vTextureCoord;
 
    void main(void) {
        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
        vTextureCoord = aTextureCoord;
    }
</script>
#+end_src


* Tangled files   
** Skeleton
** Simple particle

#+name: Example - simple particle
#+begin_src html :tangle simple-particle.html :noweb tangle
  <html>
    <head>
      <<JSIncludes>>
      <<FragmentShader>>
      <<VertexShader>>
    </head>
    <body>
      <<CANVAS>>
    </body>
  </html>
  
#+end_src


* TO DO
** TODO Empty canvas
** TODO Particle code + display
** TODO Particle emitter code + display
   - demo a simple (magic) explosion
** TODO Improved emitter (physics) + display
   - demo snowe
   - demo smoke
   - demo jet
** TODO Bonus
   - particles that follow path
   - demo <3 :).
